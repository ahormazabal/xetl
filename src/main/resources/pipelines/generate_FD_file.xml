<!--
Pipeline para archivo D
-->
<pipeline name="generate_FD_file">
  <steps>

    <!-- load records from csv-->
    <step type="loaddb">
      <origin>
        SELECT
          fecha                                          AS fecha_proceso,
          get_cod_nivel(sistema, scm, cm, pt, cl, ct, f) AS nivel,
          cm                                             AS cm,
          pt                                             AS pt,
          cl                                             AS cl,
          ct                                             AS ct,
          f                                              AS f,
          --  A generar por fdFileProcessor              AS riesgott,
          CASE WHEN t_suma &lt; 0 THEN 0
          ELSE t_suma END                                AS riesgot,
          -- escenarios seran removidos por fdFileProcessor
          escenarios_total :: VARCHAR                    AS escenarios_total
        FROM estimacion_de_riesgo
        WHERE id_sesion = '${SESSION_ID}'
              AND tipo_de_escenario = 'CRISIS'
              AND is_movil('${SESSION_NAME}', tipo_de_escenario, tipo_de_estimacion, scm, t1, t2, t3)
              -- Niveles
              AND (
                is_nivel_pt(netting, sistema, scm, cm, pt, cl, ct, f)
                OR is_nivel_cl1(netting, sistema, scm, cm, pt, cl, ct, f)
                OR is_nivel_cl2(netting, sistema, scm, cm, pt, cl, ct, f)
              )
        ORDER BY
          nivel ASC,
          cm ASC,
          pt ASC
      </origin>
    </step>

    <!-- Corregir anomalia entre niveles PT y CL1 -->
    <step type="pt_cl1_LevelCorrector"/>

    <!-- Procesador de archivo FD -->
    <step type="fdFileProcessor"/>

    <step type="format">
      <nivel>%-4s</nivel>
      <cm>%2s</cm>
      <pt>%03d</pt>
      <cl>%03d</cl>
      <ct>%-15s</ct>
      <f>%1s</f>
      <riesgott>%+019.2f</riesgott>
      <riesgot>%+019.2f</riesgot>
    </step>

    <!-- Save to file -->
    <step type="savecsv">
      <destination>${OUTPUT_DIR}/FD${DATE_SHORT}</destination>
      <delimiter>,</delimiter>
      <write-header>false</write-header>
    </step>
    <!--<step type="stdout"/>-->

  </steps>
</pipeline>
