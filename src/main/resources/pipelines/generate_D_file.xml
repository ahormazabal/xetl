<!--
Pipeline para archivo D
-->
<pipeline name="generate_D_file">
  <steps>

    <!-- load records from csv-->
    <step type="loaddb">
      <origin>
        SELECT
          get_cod_tipo(tipo_de_estimacion)               AS tipo,
          fecha                                          AS fecha_proceso,
          '${OLD_INTRADAY_ID}'                           AS correlativo,
          get_cod_arbol(sistema)                         AS arbol,
          get_cod_nivel(sistema, scm, cm, pt, cl, ct, f) AS nivel,
          cm,
          pt,
          fecha_proyeccion,
          cl,
          ct,
          f,
		-- OPCION (1) 
         riesgo_t                                      AS riesgot_,
         riesgo_t                                      AS riesgot
		-- OPCION (2)
--          riesgo_t                                       AS riesgot,
--          riesgo_tt                                      AS riesgott
        FROM

          -- Construir datos de archivo:

          -- Si fecha__proceso = primera fecha liquidacion y t3 no es nulo
          --    filtrar t1
          --    dejar t2y t3
          --  si primera fecha de liquidacion es mayor que fecha proceso y t3 no es nulo
          --    dejar t1
          --    agrupar t2 y t3
          --  si primera fecha de liquidacion es mayor que fecha proceso y t3 no es nulo
          --
          --    agrupar t1 y t2
          --
          -- luego filtrar registros vacio.

          (SELECT
             -- T1
             *,
-- OPCION (1) 
             t_1                                                                      AS riesgo_t_,
             t_1                                                                      AS riesgo_t,
-- OPCION (2) 
--             t_1                                                                      AS riesgo_t_,
--             tt1                                                                      AS riesgo_tt,
             get_fecha_liquidacion('${DATE}' :: DATE, '${INTRADAY_ID}' :: VARCHAR, 0) AS fecha_proyeccion
           FROM estimacion_de_riesgo
           WHERE get_fecha_liquidacion('${DATE}' :: DATE, '${INTRADAY_ID}', 0) &gt; '${DATE}' AND get_fecha_liquidacion('${DATE}' :: DATE, '${INTRADAY_ID}', 2) IS NOT NULL

           UNION
           -- T2
           SELECT
             *,
-- OPCION (1) 
             t_2                                                           AS riesgo_t_,
             t_2                                                           AS riesgo_t,
-- OPCION (2) 
--             t_2                                                           AS riesgo_t_,
--             tt2                                                           AS riesgo_tt,
             get_fecha_liquidacion('${DATE}' :: DATE, '${INTRADAY_ID}', 1) AS fecha_proyeccion
           FROM estimacion_de_riesgo
           WHERE get_fecha_liquidacion('${DATE}' :: DATE, '${INTRADAY_ID}', 0) = '${DATE}' AND get_fecha_liquidacion('${DATE}' :: DATE, '${INTRADAY_ID}', 2) IS NOT NULL

           UNION
           -- T3
           SELECT
             *,
-- OPCION (1) 
             t_3                                                           AS riesgo_t_,
             t_3                                                           AS riesgo_t,
-- OPCION (2) 
--             t_3                                                           AS riesgo_t,
--             tt3                                                           AS riesgo_tt,
             get_fecha_liquidacion('${DATE}' :: DATE, '${INTRADAY_ID}', 2) AS fecha_proyeccion
           FROM estimacion_de_riesgo
           WHERE get_fecha_liquidacion('${DATE}' :: DATE, '${INTRADAY_ID}', 0) = '${DATE}' AND get_fecha_liquidacion('${DATE}' :: DATE, '${INTRADAY_ID}', 2) IS NOT NULL

           UNION
           -- Agrupar T2 y T3
           SELECT
             fecha,
             id_sesion,
             tipo_de_escenario,
             tipo_de_estimacion,
             netting,
             sistema,
             scm,
             cm,
             pt,
             cl,
             ct,
             f,
             t1,
             t2,
             t3,
             NULL                                                          AS tt,
             NULL                                                          AS tt1,
             NULL                                                          AS tt2,
             NULL                                                          AS tt3,
             NULL                                                          AS t_1,
             NULL                                                          AS t_2,
             NULL                                                          AS t_3,
             NULL                                                          AS t_suma,
             NULL                                                          AS tt_cvar,
             NULL                                                          AS t_suma_cvar,
             NULL                                                          AS escenarios_total,
             NULL                                                          AS escenarios_t1,
             NULL                                                          AS escenarios_t2,
             NULL                                                          AS escenarios_t3,
-- OPCION (1)
             sum(riesgo_t_)                                                AS riesgo_t_,
             sum(riesgo_t)                                                 AS riesgo_t,
-- OPCION (2) 
--          sum(riesgo_t)                                                  AS riesgo_t
--          sum(riesgo_tt)                                                 AS riesgo_tt,
             get_fecha_liquidacion('${DATE}' :: DATE, '${INTRADAY_ID}', 1) AS fecha_proyeccion
           FROM (SELECT
                   *,
-- OPCION (1) 
                   t_2 AS riesgo_t_,
                   t_2 AS riesgo_t             
-- OPCION (2) 
--                   t_2 AS riesgo_t,
--                   tt2 AS riesgo_tt
                 FROM estimacion_de_riesgo

                 UNION
                 SELECT
                   *,
-- OPCION (1) 
                   t_3 AS riesgo_t_,
                   t_3 AS riesgo_t
-- OPCION (2) 
--                  t_3 AS riesgo_t,
--                  tt3 AS riesgo_tt
                 FROM estimacion_de_riesgo

                ) AS groupdata
           WHERE get_fecha_liquidacion('${DATE}' :: DATE, '${INTRADAY_ID}', 0) &gt; '${DATE}' AND get_fecha_liquidacion('${DATE}' :: DATE, '${INTRADAY_ID}', 2) IS NOT NULL
           GROUP BY fecha, id_sesion, tipo_de_escenario, tipo_de_estimacion, netting,
             sistema, scm, cm, pt, cl, ct, f, t1, t2, t3
             UNION
           -- Agrupar T1 y T2
           SELECT
             fecha,
             id_sesion,
             tipo_de_escenario,
             tipo_de_estimacion,
             netting,
             sistema,
             scm,
             cm,
             pt,
             cl,
             ct,
             f,
             t1,
             t2,
             t3,
             NULL                                                          AS tt,
             NULL                                                          AS tt1,
             NULL                                                          AS tt2,
             NULL                                                          AS tt3,
             NULL                                                          AS t_1,
             NULL                                                          AS t_2,
             NULL                                                          AS t_3,
             NULL                                                          AS t_suma,
             NULL                                                          AS tt_cvar,
             NULL                                                          AS t_suma_cvar,
             NULL                                                          AS escenarios_total,
             NULL                                                          AS escenarios_t1,
             NULL                                                          AS escenarios_t2,
             NULL                                                          AS escenarios_t3,
-- OPCION (1)
             sum(riesgo_t_)                                                AS riesgo_t_,
             sum(riesgo_t)                                                 AS riesgo_t,
-- OPCION (2) 
--          sum(riesgo_t)                                                  AS riesgo_t
--          sum(riesgo_tt)                                                 AS riesgo_tt,
             get_fecha_liquidacion('${DATE}' :: DATE, '${INTRADAY_ID}', 0) AS fecha_proyeccion
           FROM (SELECT
                   *,
-- OPCION (1) 
                   t_1 AS riesgo_t_,
                   t_1 AS riesgo_t
-- OPCION (2) 
--                 t_1 AS riesgo_t,
--                 tt1 AS riesgo_tt
                 FROM estimacion_de_riesgo

                 UNION
                 SELECT
                   *,
-- OPCION (1) 
                   t_2 AS riesgo_t_,
                   t_2 AS riesgo_tt
-- OPCION (2) 
--                   t_2 AS riesgo_t,
--                   tt2 AS riesgo_tt
                 FROM estimacion_de_riesgo

                ) AS groupdata
           WHERE get_fecha_liquidacion('${DATE}' :: DATE, '${INTRADAY_ID}', 0) &gt; '${DATE}' AND get_fecha_liquidacion('${DATE}' :: DATE, '${INTRADAY_ID}', 2) IS NULL
           GROUP BY fecha, id_sesion, tipo_de_escenario, tipo_de_estimacion, netting,
             sistema, scm, cm, pt, cl, ct, f, t1, t2, t3
             

          ) AS data

        -- Niveles
        WHERE
          id_sesion = '${SESSION_ID}'
          AND tipo_de_escenario = 'HISTORICO'
          AND ('${OLD_INTRADAY_ID}'::int != 0 OR scm NOT IN ('PH', 'SM'))
          AND (is_estatico(tipo_de_estimacion, t1, t2, t3, 1) OR
               is_movil('${SESSION_NAME}', tipo_de_escenario, tipo_de_estimacion, scm, t1, t2, t3))
          AND (
            is_nivel_cclv(netting, sistema, scm, cm, pt, cl, ct, f)
--             OR is_nivel_sistema(netting, sistema, scm, cm, pt, cl, ct, f)
--             OR is_nivel_scm(netting, sistema, scm, cm, pt, cl, ct, f)
--             OR is_nivel_cm(netting, sistema, scm, cm, pt, cl, ct, f)
--             OR is_nivel_cclv_pt(netting, sistema, scm, cm, pt, cl, ct, f)
--             OR is_nivel_sistema_pt(netting, sistema, scm, cm, pt, cl, ct, f)
--             OR is_nivel_scm_pt(netting, sistema, scm, cm, pt, cl, ct, f)
--             OR is_nivel_cm_pt(netting, sistema, scm, cm, pt, cl, ct, f)
            OR is_nivel_pt(netting, sistema, scm, cm, pt, cl, ct, f)
--             OR is_nivel_cclv_cl(netting, sistema, scm, cm, pt, cl, ct, f)
--             OR is_nivel_sistema_cl(netting, sistema, scm, cm, pt, cl, ct, f)
--             OR is_nivel_scm_cl(netting, sistema, scm, cm, pt, cl, ct, f)
--             OR is_nivel_cm_cl(netting, sistema, scm, cm, pt, cl, ct, f)
            OR is_nivel_cl1(netting, sistema, scm, cm, pt, cl, ct, f)
            OR is_nivel_cl2(netting, sistema, scm, cm, pt, cl, ct, f)
            OR (is_nivel_cl3(netting, sistema, scm, cm, pt, cl, ct, f) AND cl IN ('236','635','628')) -- Nivel igual a is_nivel_cm_cl
--             OR is_nivel_cclv_ct(netting, sistema, scm, cm, pt, cl, ct, f)
--             OR is_nivel_sistema_ct(netting, sistema, scm, cm, pt, cl, ct, f)
--             OR is_nivel_scm_ct(netting, sistema, scm, cm, pt, cl, ct, f)
--             OR is_nivel_cm_ct(netting, sistema, scm, cm, pt, cl, ct, f)
            OR is_nivel_ct1(netting, sistema, scm, cm, pt, cl, ct, f)
            OR is_nivel_ct2(netting, sistema, scm, cm, pt, cl, ct, f)
          )
-- OPCION (1) 
AND (riesgo_t NOTNULL OR riesgo_t_ NOTNULL)
-- OPCION (2) 
-- AND (riesgo_t NOTNULL OR riesgo_tt NOTNULL)
        ORDER BY
          nivel ASC,
          tipo_de_estimacion ASC,
          cm ASC NULLS FIRST,
          pt ASC NULLS FIRST,
          cl ASC NULLS FIRST,
          ct ASC NULLS FIRST,
          f ASC NULLS FIRST,
          fecha_proyeccion ASC
      </origin>
    </step>

    <!-- Corregir anomalia entre niveles PT y CL1 -->
    <step type="pt_cl1_LevelCorrector"/>


    <!--<step type="dateformat">-->
      <!--<column>fecha_proceso</column>-->
      <!--<from>yyyy/MM/dd</from>-->
      <!--<to>yyyy-MM-dd</to>-->
    <!--</step>-->

    <step type="format">
      <tipo>%-20s</tipo>
      <!--<fecha_proceso></fecha_proceso>-->
      <correlativo>%02d</correlativo>
      <arbol>%-20s</arbol>
      <nivel>%-4s</nivel>
      <cm>%2s</cm>
      <pt>%03d</pt>
      <!--<fecha_proyeccion></fecha_proyeccion>-->
      <cl>%03d</cl>
      <ct>%-15s</ct>
      <f>%1s</f>
      <riesgot_>%+019.2f</riesgot_>
      <riesgot>%+019.2f</riesgot>
    </step>

    <!--Save to file-->
    <step type="savecsv">
      <destination>${OUTPUT_DIR}/D${OLD_INTRADAY_ID}${DATE_SHORT}</destination>
      <delimiter>,</delimiter>
      <write-header>false</write-header>
    </step>
  </steps>
</pipeline>
